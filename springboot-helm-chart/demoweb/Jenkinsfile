pipeline {

  agent any

parameters {
        string(name: 'version', defaultValue: 'latest', description: 'Please provide the version number')
}
	
   environment {
    image = "madhu1718/test-repo"
    version = "${params.version}"
    region= "ap-south-1"
    cluster_name= "Cluster-Qp97W0J0sYeB"
	

   }
	
  stages {
	   stage('Input approval') {
        steps {
          
            script {
              timeout(time: 10, unit: 'MINUTES') {
                input(id: "Input approval", message: "Please provide approval to proceed further", ok: 'Deploy')
              }
            }
        }
    }
    stage('Compile and package') {
      steps {
        sh "cd springboot-helm-chart/demoweb && mvn package"
      }
    }
 
  
    stage('Build Docker Image') {
      steps {
        script {
           sh """docker build -t $image:$version springboot-helm-chart/demoweb
               docker push $image:$version
                docker rmi $image:$version
				"""
				}
				}
		 }
		   
	stage('Deploy into K8S') {
       steps {
	       script {
             sh """
	     echo " Update the kubeconfig"
	     aws eks --region $region update-kubeconfig --name $cluster_name
	     echo "Changing image name and version in deployment yaml file"
	      cd springboot-helm-chart/demoweb
	      export image_fullname="$image:$version"
	      sed -i 's/tag/$version/' deployment.yaml
	      kubectl apply -f deployment.yaml
	      kubectl apply -f service.yaml
	      
	    
	           """
	       }
        }
    }
	
	}
	}
